import{o as j,i as z,M as G,f as A,h as B}from"./mat3-Dl7tuPw9.js";import{e as C,m as D}from"./MapView-Dixw5mu6.js";import{t as E}from"./vec2f32-BbH2jxlN.js";import{r as L}from"./vec3f32-nZdmKIgz.js";import{dr as k,b$ as q}from"./index-CzS7jo2D.js";import{n as F,h as H}from"./WGLContainer-Cxkhp9ug.js";import{E as J}from"./Container-C4FuTI8A.js";class Z extends F{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=C()}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const r of this.children)r.beforeRender(e)}prepareRenderPasses(e){const r=e.registerRenderPass({name:"overlay",brushes:[H.overlay],target:()=>this.children,drawPhase:J.MAP});return[...super.prepareRenderPasses(e),r]}_updateMatrices(e){const{state:r}=e,{id:s,size:c,pixelRatio:a,resolution:h,rotation:l,viewpoint:M,displayMat3:u}=r;if(this._viewStateId===s)return;const p=Math.PI/180*l,o=a*c[0],n=a*c[1];this._localOrigin=M.targetGeometry.clone();const{x:d,y:_}=this._localOrigin,f=k(d,r.spatialReference);this._localOrigin.x=f,this._localOrigin.y=_;const v=h*o,g=h*n,t=j(this._dvsMat3);z(t,t,u),G(t,t,E(o/2,n/2)),A(t,t,L(o/v,-n/g,1)),B(t,t,-p),this._viewStateId=s}_updateOverlays(e,r){const{state:s}=e,{rotation:c,spatialReference:a,worldScreenWidth:h,size:l,viewpoint:M}=s,u=this._localOrigin;let p,o=0;const n=q(a);if(n&&a.isWrappable){const d=l[0],_=l[1],f=180/Math.PI*c,v=Math.abs(Math.cos(f)),g=Math.abs(Math.sin(f)),t=Math.round(d*v+_*g),[b,x]=n.valid,i=D(a),{x:O,y:I}=M.targetGeometry,S=[O,I],w=[0,0];s.toScreen(w,S);const m=[0,0];let y;y=t>h?.5*h:.5*t;const P=Math.floor((O+.5*i)/i),$=b+P*i,W=x+P*i,R=[w[0]+y,0];s.toMap(m,R),m[0]>W&&(o=i),R[0]=w[0]-y,s.toMap(m,R),m[0]<$&&(o=-i),p={worldWidth:i,xBounds:[b,x]}}for(const d of r)d.updateDrawCoords(u,o,a,p)}}export{Z as f};
