import{bd as e,n as a,e as o,y as p,a as s}from"./index-Bk13oInq.js";import{a as n}from"./BitmapContainer-B-urGIon.js";import{f as h,y as d}from"./LayerView-Lu0V4hoe.js";import{_ as y}from"./ExportStrategy-DpqlxF9M.js";import{i as c}from"./RefreshableLayerView-Zr81cynh.js";import"./WGLContainer-C_q-a8yP.js";import"./definitions-Y_v3njP4.js";import"./LabelMetric-CEVwe__6.js";import"./enums-BRXbslMp.js";import"./Texture-BEO3u2nF.js";import"./enums-BlUEVwJR.js";import"./Program-Zm_RPRKO.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./ProgramTemplate-hUSSPUdw.js";import"./mat2df32-R1u-v0DR.js";import"./mat3-C14MOv1v.js";import"./MapView-CnzZs5CS.js";import"./ColorBackground-eCqVLvQh.js";import"./Cyclical-DJv7mGBZ.js";import"./Basemap-DRYqJJ3x.js";import"./writeUtils-CuGAkQa7.js";import"./catalogUtils-8MGqu6UW.js";import"./basemapUtils-CYwIlTGS.js";import"./TablesMixin-C8r3nFk7.js";import"./TileInfo-YUEK5NHk.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BqCOQaP5.js";import"./UpdatingHandles-BbNCyyZd.js";import"./signal-OzWV8BHP.js";import"./GraphicsCollection-CfPNlBPF.js";import"./ReactiveMap-Da-zqImQ.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./vec2-BCOFwZS_.js";import"./unitBezier-BX6NeAEr.js";import"./HighlightOptions-DDS_yKQv.js";import"./TileKey--6M9Nr4r.js";import"./QueueProcessor-BAwGOb3p.js";import"./quickselect-D0_cvEX6.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-Qth4t0nf.js";import"./GoTo-4Mtk1asH.js";import"./Zoom-DXKbY9hl.js";import"./vec3f32-nZdmKIgz.js";import"./Container-6q8gvuqA.js";import"./EffectView-DjOH8g88.js";import"./highlightReasons-COwmR_fj.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-BqgeR2O3.js";import"./layerViewUtils-DaObYqcz.js";import"./Bitmap-_R7S8flh.js";let t=class extends c(h(d)){update(r){this._strategy.update(r).catch(i=>{e(i)||a.getLogger(this).error(i)}),this.notifyChange("updating")}attach(){this._bitmapContainer=new n,this.container.addChild(this._bitmapContainer),this._strategy=new y({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this._strategy.destroy(),this._strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(r,i,m){return this.layer.fetchImageBitmap(r,i,m)}async doRefresh(){this.requestUpdate()}isUpdating(){return this._strategy.updating||this.updateRequested}};o([p()],t.prototype,"_strategy",void 0),o([p()],t.prototype,"updating",void 0),t=o([s("esri.views.2d.layers.BaseDynamicLayerView2D")],t);const lt=t;export{lt as default};
