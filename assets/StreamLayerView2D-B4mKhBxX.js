import{e as s,y as n,a as l,a7 as m,l as c,gv as _,ab as g,A as d}from"./index-DrXmDmNo.js";import{n as f,r as v}from"./FeatureLayerView2D-CVYZPg0d.js";import{d as S}from"./FeatureEffect-Blpaidl3.js";import"./EffectView-DaGlAoAX.js";import"./timeSupport-nPbkOBVf.js";import"./highlightReasons-BNKfp7La.js";import"./HighlightOptions-D_OZmY62.js";import"./TileKey-hjmPFqj7.js";import"./vec2-D0pkyIyk.js";import"./QueueProcessor-C7Sd_Dql.js";import"./workers-DyNy5431.js";import"./ReactiveMap-ByzMPoCW.js";import"./signal-CZM_1c-0.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./LayerView-CyxDcjMg.js";import"./Container-BrH55kD1.js";import"./MapView-D_avtWRM.js";import"./ColorBackground-Di8Wmf0D.js";import"./Cyclical-DRA1VwK8.js";import"./Basemap-C4r8OrxO.js";import"./writeUtils-CRTDkgfw.js";import"./catalogUtils-B9q2QXfA.js";import"./basemapUtils-BTC0rQpy.js";import"./TablesMixin-CvYOZ7C2.js";import"./TileInfo-x2FTkYhw.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-CzJJMnWA.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-kGBlDLEG.js";import"./GraphicsCollection-Cj0AuiGJ.js";import"./HeightModelInfo-D8qsUl09.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./mat2df32-BnW4ICXY.js";import"./mat3-KgbA14kX.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CGWZqrrX.js";import"./GoTo-BHBpPKO_.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-VMKWoxWT.js";import"./layerViewUtils-DaObYqcz.js";import"./TechniqueInstance-BM7v2vec.js";import"./UpdateTracking2D-De1S5fKG.js";import"./BindType-BmZEZMMh.js";import"./Util-DL5hdwRj.js";import"./Program-DotuxoXf.js";import"./LabelMetric-DAEHXHaF.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./TileContainer-GI3qDpIc.js";import"./WGLContainer-Dfm0rjt5.js";import"./ProgramTemplate-0iDiPyHg.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-BqgeR2O3.js";import"./CircularArray-CujHzHWW.js";import"./tileUtils-B7X19rIS.js";import"./featureReductionUtils-Caulfaw_.js";import"./OrderByInfo-BUDSygAi.js";import"./CIMSymbolHelper-C7LQfJjg.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CPGK_ef0.js";import"./GeometryUtils-DjTdO-mi.js";import"./Rect-CUzevAry.js";import"./SDFHelper-r09-GoIi.js";import"./floatRGBA-D4cVdq4-.js";import"./FeatureCommandQueue-BGoiqPg-.js";import"./constants-D5zmR9t2.js";import"./HighlightCounter-BV9rRStm.js";import"./popupUtils-CY7M28oJ.js";import"./RefreshableLayerView-DWclY3er.js";const C=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return s([n()],t.prototype,"_isUserPaused",void 0),s([n({readOnly:!0})],t.prototype,"connectionStatus",null),s([n({type:S})],t.prototype,"filter",void 0),t=s([l("esri.views.layers.StreamLayerView")],t),t};let o=class extends C(v){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([m(()=>this.layer.customParameters,async e=>{(await this.getWorker()).streamMessenger.updateCustomParameters(e)}),this.layer.on("send-message-to-socket",async e=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(e)}),this.layer.on("send-message-to-client",async e=>{(await this.getWorker()).streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),m(()=>this.layer.purgeOptions,()=>this._update()),m(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new c("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return _(e.map(i=>this.on(i,t)));const r=["data-received","message-received"].includes(e);r&&this.getWorker().then(i=>i.streamMessenger.enableEvent(e,!0));const p=super.on(e,t),a=this;return g(()=>{p.remove(),r&&(a._workerProxy.closed||a.hasEventListener(e)||a.getWorker().then(i=>i.streamMessenger.enableEvent(e,!1)))})}async queryLatestObservations(e,t){var p,a,i;if(!((p=this.layer.timeInfo)!=null&&p.endField||(a=this.layer.timeInfo)!=null&&a.startField||(i=this.layer.timeInfo)!=null&&i.trackIdField))throw new c("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return f(r.features.executeQueryForLatestObservations(this._cleanUpQuery(e),t).then(y=>{const h=d.fromJSON(y);return h.features.forEach(u=>{u.layer=this.layer,u.sourceLayer=this.layer}),h}),new d({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(e=>e.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(e=>e.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(e=>e.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),t=this;return{...e,get container(){return t.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};s([n()],o.prototype,"pipelineConnectionStatus",void 0),s([n()],o.prototype,"pipelineErrorString",void 0),s([n({readOnly:!0})],o.prototype,"connectionError",null),s([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=s([l("esri.views.2d.layers.StreamLayerView2D")],o);const je=o;export{je as default};
