import{cS as p,A as s,ag as i}from"./index-DMEurr7E.js";import{l as c}from"./MeshVertexAttributes-4XQh5XPf.js";import{M as n}from"./vertexSpaceConversion-ColvvXHg.js";import"./mat3-DpO5zmwl.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-p4JQO6eQ.js";import"./computeTranslationToOriginAndRotation-DgOmFJFy.js";import"./meshVertexSpaceUtils-CTqpgMdj.js";import"./MeshLocalVertexSpace-CR50_5mF.js";import"./vec3-qUC68F9y.js";import"./projection-8KnnKBmX.js";import"./DoubleArray-CmtOpRaT.js";import"./BufferView-CZH9x0W8.js";import"./vec2-RO8L90HL.js";import"./vec4-C7J_bEsg.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
