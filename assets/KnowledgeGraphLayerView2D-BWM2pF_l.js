import{V as p,dp as m,e,y as o,dq as s,a}from"./index-CzS7jo2D.js";import{f as n,y as l}from"./LayerView-Ckj4pno-.js";import"./Container-C4FuTI8A.js";import"./MapView-Dixw5mu6.js";import"./ColorBackground-47PVtrzo.js";import"./Cyclical-BlUOQMZ_.js";import"./Basemap-Hu7HZa5W.js";import"./writeUtils-BySt8C3g.js";import"./catalogUtils-D6TBKBjQ.js";import"./basemapUtils-CYgZVrru.js";import"./TablesMixin-CLlMVPod.js";import"./workers-CJtfUUkE.js";import"./TileInfo-CQtf5GFs.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-B8CyFVeU.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CLtA4WOc.js";import"./signal-C4CCv7-P.js";import"./GraphicsCollection-DQK0G4m_.js";import"./HeightModelInfo-CjM21LTA.js";import"./ReactiveMap-BvvoP9G5.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./vec2-DChfXfRy.js";import"./mat2df32-QsaSSwKV.js";import"./mat3-Dl7tuPw9.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./HighlightOptions-VIZaInXo.js";import"./TileKey-DwISPd47.js";import"./QueueProcessor-NEME7nim.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-BMzhbjfv.js";import"./GoTo-RTps9ddm.js";import"./EffectView-BdZceHjS.js";import"./highlightReasons-D08BCZyD.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-BrSwI75r.js";import"./layerViewUtils-DaObYqcz.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};e([o({cast:s})],r.prototype,"layerViews",null),e([o({readOnly:!0})],r.prototype,"updatingProgress",null),r=e([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const rt=r;export{rt as default};
