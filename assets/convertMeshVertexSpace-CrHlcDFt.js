import{cS as p,A as s,ag as i}from"./index-Bk13oInq.js";import{l as c}from"./MeshVertexAttributes-BUjRqizR.js";import{M as n}from"./vertexSpaceConversion-C8HfVdKC.js";import"./mat3-C14MOv1v.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-CQXtSSpD.js";import"./computeTranslationToOriginAndRotation-DbcDmg7H.js";import"./meshVertexSpaceUtils-BJyVX-SE.js";import"./MeshLocalVertexSpace-B4eAPtJg.js";import"./vec3-NnJ7vW5v.js";import"./projection-C74wgsey.js";import"./DoubleArray-1u08GJSR.js";import"./BufferView-BVV0JtQk.js";import"./vec2-BCOFwZS_.js";import"./vec4-Bf5xU-rg.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
