import{bG as c,bN as g,bO as p,ba as y}from"./index-DMEurr7E.js";import{a as m}from"./WebMap-Ds0kbNzb.js";import"./ColorBackground-DELE_yvu.js";import"./Cyclical-DzFgk17I.js";import"./Basemap-B_JFXx5r.js";import"./writeUtils-UNPMbZhD.js";import"./catalogUtils-Cj4NyFw1.js";import"./basemapUtils-B4CdTPpj.js";import"./TablesMixin-YgM-0nE_.js";import"./jsonContext-sw1e6Qr2.js";import"./project-DK1RFrrh.js";async function R(a,e,o){const t=c(a),r=e.toJSON();r.traceLocations=JSON.stringify(e.traceLocations),e.resultTypes&&(r.resultTypes=JSON.stringify(e.resultTypes));const n=g(t.query,{query:p({...r,f:"json"}),...o}),i=`${t.path}/trace`;return y(i,n).then(s=>u(s,e.outSpatialReference))}async function q(a,e,o){const t=c(a),r=e.toJSON();r.traceLocations=JSON.stringify(e.traceLocations),e.resultTypes&&(r.resultTypes=JSON.stringify(e.resultTypes));const n=g(t.query,{query:p({...r,async:!0,f:"json"}),...o}),i=`${t.path}/trace`,{data:s}=await y(i,n);return s.statusUrl}function u(a,e){const{data:o}=a,t=m.fromJSON(o.traceResults);return t.aggregatedGeometry&&e&&(t.aggregatedGeometry.line&&(t.aggregatedGeometry.line.spatialReference=e.clone()),t.aggregatedGeometry.multipoint&&(t.aggregatedGeometry.multipoint.spatialReference=e.clone()),t.aggregatedGeometry.polygon&&(t.aggregatedGeometry.polygon.spatialReference=e.clone())),t}export{q as submitTraceJob,R as trace};
