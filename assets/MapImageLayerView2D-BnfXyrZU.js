import{e as r,y as o,a as m,gC as g,aN as l,n as d,a7 as u}from"./index-DeC8R2EY.js";import{c}from"./GraphicsCollection-SIu__Du-.js";import{a as y}from"./BitmapContainer-CVPfCMer.js";import{f,y as x}from"./LayerView-Dp2sn9Xz.js";import{V as _}from"./GraphicsView2D-CUH9IX8G.js";import{h as w}from"./HighlightGraphicContainer-DNdhF-5b.js";import{_ as H}from"./ExportStrategy-9L9Rau77.js";import{i as v}from"./timeSupport-BW5cKeP0.js";import{i as I}from"./RefreshableLayerView-CHQJ1iDQ.js";import{_ as $,r as V}from"./MapServiceLayerViewHelper-DiUB83f5.js";import"./WGLContainer-CzQbOC9S.js";import"./definitions-Y_v3njP4.js";import"./LabelMetric-hYcv8RGS.js";import"./enums-BRXbslMp.js";import"./Texture-BYwPIHCF.js";import"./enums-BlUEVwJR.js";import"./Program-CtZKXgqu.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./ProgramTemplate-CKFIcZwk.js";import"./mat2df32-C2OBHU72.js";import"./mat3-B_XLSnFE.js";import"./MapView-BBy5giMW.js";import"./ColorBackground-CCXAQYWM.js";import"./Cyclical-38T1ej_i.js";import"./Basemap-CLA9H8hr.js";import"./writeUtils-CAU0mSSk.js";import"./catalogUtils-CvPMm0ln.js";import"./basemapUtils-HzHsFYAS.js";import"./TablesMixin-C8OXRIvw.js";import"./workers-BguUern_.js";import"./TileInfo-Cr8gfvFO.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-DiRSUczt.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-BNbWj5Fr.js";import"./signal-BNXC09rj.js";import"./HeightModelInfo-Dglyqlez.js";import"./ReactiveMap-Dvvelgb3.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./vec2-D3LTqm3p.js";import"./unitBezier-BX6NeAEr.js";import"./HighlightOptions-D4tlvSsS.js";import"./TileKey-CreuqEVw.js";import"./QueueProcessor-BcOyPfZX.js";import"./quickselect-D0_cvEX6.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CyRbo2BQ.js";import"./GoTo-CYL7uNAW.js";import"./vec3f32-nZdmKIgz.js";import"./Container-CoqWYi6E.js";import"./EffectView-BfJ_X6x6.js";import"./highlightReasons-CWuv-1T5.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-BqgeR2O3.js";import"./layerViewUtils-DaObYqcz.js";import"./CIMSymbolHelper-BI3qeG2q.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BIDUgVwr.js";import"./GeometryUtils-C7LcWSJ6.js";import"./Rect-CUzevAry.js";import"./AttributeStore-BmLBSDYf.js";import"./UpdateTracking2D-D7nHZLmz.js";import"./BindType-BmZEZMMh.js";import"./Util-CbSxKsUC.js";import"./TimeOnly-DWhDlplB.js";import"./timeSupport-BKMIHhoo.js";import"./json-Wa8cmqdu.js";import"./FeatureCommandQueue-cee2mmJs.js";import"./constants-D5zmR9t2.js";import"./normalizeUtilsSync-B2PmSHQG.js";import"./AGraphicContainer-yj0D8jOx.js";import"./TechniqueInstance-BhXmRzYj.js";import"./TileContainer-kWPiOo7Z.js";import"./Bitmap-B_X04cw4.js";import"./popupUtils-BET-Au6n.js";const E=t=>{let e=class extends t{initialize(){this.exportImageParameters=new g({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var i;return v(this.layer,(i=this.view)==null?void 0:i.timeExtent,this._get("timeExtent"))}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"floors",null),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o()],e.prototype,"suspended",void 0),r([o({readOnly:!0})],e.prototype,"timeExtent",null),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let a=class extends E(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new c,this._updateHash=""}fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{l(i)||d.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,p=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new _({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new $({createFetchPopupFeaturesQueryGeometry:(s,h)=>V(s,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,h)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:p,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,p){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,e,i,p){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],a.prototype,"strategy",void 0),r([o()],a.prototype,"updating",void 0),a=r([m("esri.views.2d.layers.MapImageLayerView2D")],a);const ii=a;export{ii as default};
