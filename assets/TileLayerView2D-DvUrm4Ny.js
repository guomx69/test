import{a0 as w,aR as y,bd as l,n as I,e as m,y as u,a as V}from"./index-Bk13oInq.js";import{c as H}from"./GraphicsCollection-CfPNlBPF.js";import"./GeometryUtils-Cjs4mTb9.js";import"./CIMSymbolHelper-DCnivovm.js";import"./enums-BRXbslMp.js";import"./definitions-Y_v3njP4.js";import"./vec2f32-BbH2jxlN.js";import"./floatRGBA-DuiNtBOf.js";import"./EffectView-DjOH8g88.js";import"./Container-6q8gvuqA.js";import"./WGLContainer-C_q-a8yP.js";import"./Texture-BEO3u2nF.js";import"./enums-BlUEVwJR.js";import"./Program-Zm_RPRKO.js";import"./LabelMetric-CEVwe__6.js";import"./StyleDefinition-BK3ROBTO.js";import"./enums-BRzLM11V.js";import"./MagnifierPrograms-CiXctC1m.js";import"./FeatureCommandQueue-Bl7LjAKh.js";import"./UpdateTracking2D-BBDb53Qo.js";import"./PieChartMeshWriter-2R-36Zv6.js";import"./renderState-C37QfRey.js";import"./interfaces-B8ge7Jg9.js";import"./testSVGPremultipliedAlpha-DuAkxGDh.js";import{V as v}from"./GraphicsView2D-CKkZdRzC.js";import"./earcut-BqgeR2O3.js";import"./vec3f32-nZdmKIgz.js";import"./UpdatingHandles-BbNCyyZd.js";import{r as T,o as g,n as f}from"./imageUtils-5_o_txSN.js";import{f as q,y as U}from"./LayerView-Lu0V4hoe.js";import{h as b}from"./HighlightGraphicContainer-OCr5GZ1k.js";import{h as C,m as Q,r as S}from"./HighlightOptions-DDS_yKQv.js";import{e as d}from"./TileKey--6M9Nr4r.js";import{i as $}from"./RefreshableLayerView-Zr81cynh.js";import{U as P,_ as L,r as k}from"./MapServiceLayerViewHelper-B8N-RjDT.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-Bqe3YEwq.js";import"./mat2df32-R1u-v0DR.js";import"./vec2-BCOFwZS_.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./MapView-CnzZs5CS.js";import"./ColorBackground-eCqVLvQh.js";import"./Cyclical-DJv7mGBZ.js";import"./Basemap-DRYqJJ3x.js";import"./writeUtils-CuGAkQa7.js";import"./catalogUtils-8MGqu6UW.js";import"./basemapUtils-CYwIlTGS.js";import"./TablesMixin-C8r3nFk7.js";import"./TileInfo-YUEK5NHk.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BqCOQaP5.js";import"./signal-OzWV8BHP.js";import"./ReactiveMap-Da-zqImQ.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./mat3-C14MOv1v.js";import"./unitBezier-BX6NeAEr.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-Qth4t0nf.js";import"./GoTo-4Mtk1asH.js";import"./Zoom-DXKbY9hl.js";import"./highlightReasons-COwmR_fj.js";import"./ProgramTemplate-hUSSPUdw.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./config-MDUrh2eL.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-Dg8iRD7O.js";import"./TimeOnly-DnMhE39F.js";import"./timeSupport-Dq9Imaam.js";import"./json-Wa8cmqdu.js";import"./constants-D5zmR9t2.js";import"./QueueProcessor-BAwGOb3p.js";import"./BindType-BmZEZMMh.js";import"./Util-Dw4pprZa.js";import"./TurboLine-Ba1Rn1W6.js";import"./basicInterfaces-DngWxyLO.js";import"./normalizeUtilsSync-Dl3QVGq8.js";import"./Bitmap-_R7S8flh.js";import"./TileContainer-BS8vH-8_.js";import"./layerViewUtils-DaObYqcz.js";import"./AGraphicContainer-Q7uDtBG6.js";import"./TechniqueInstance-2fY55xnY.js";import"./quickselect-D0_cvEX6.js";import"./popupUtils-tzDSy2ZI.js";const F=[0,0];let p=class extends $(T(q(U))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new H,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new C(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new Q({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new S({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,h)=>k(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):w()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return y((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(F,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!l(s)&&!this.resampling)return g(this._tileInfoView.tileInfo.size);if(h<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const c=new d(n),_=await this.fetchTile(c,{...i,resamplingLevel:h+1});return f(this._tileInfoView,_,c,t)}}throw s}const o=new d(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:r}),o.level!==t.level&&!this.resampling)return g(this._tileInfoView.tileInfo.size);a=await this._fetchImage(o,r)}catch(s){if(l(s))throw s;a=await this._fetchImage(t,r)}return this.resampling?f(this._tileInfoView,a,o,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};m([u()],p.prototype,"resampling",null),m([u()],p.prototype,"tilemapCache",null),p=m([V("esri.views.2d.layers.TileLayerView2D")],p);const di=p;export{di as default};
