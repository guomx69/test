import{cS as p,A as s,ag as i}from"./index-C74WJ1Ej.js";import{l as c}from"./MeshVertexAttributes-D1CjpUzD.js";import{M as n}from"./vertexSpaceConversion-qq1evbxj.js";import"./mat3-D_kV6Cf_.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-C6IaFvBS.js";import"./computeTranslationToOriginAndRotation-BNk0_-3t.js";import"./meshVertexSpaceUtils-zwpHSOaj.js";import"./MeshLocalVertexSpace-DrXJ_Let.js";import"./vec3-BuitC0DB.js";import"./projection-YpY0vuMQ.js";import"./DoubleArray-BYgHfYk6.js";import"./BufferView-rf2r131V.js";import"./vec2-C6u-cZfH.js";import"./vec4-DGoO6qmk.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
