import{bd as e,n as a,e as o,y as p,a as s}from"./index-BWzlmsaF.js";import{a as n}from"./BitmapContainer-DsMclWor.js";import{f as h,y as d}from"./LayerView-BQXdY2z7.js";import{_ as y}from"./ExportStrategy-CncSDiII.js";import{i as c}from"./RefreshableLayerView-DGrxCofN.js";import"./WGLContainer-lxp5wvHq.js";import"./definitions-Y_v3njP4.js";import"./LabelMetric-BuVZDfyV.js";import"./enums-BRXbslMp.js";import"./Texture-D9wDLZJF.js";import"./enums-BlUEVwJR.js";import"./Program-Ca2eHPU7.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./ProgramTemplate-CdIknHvV.js";import"./mat2df32-FBBXUtrm.js";import"./mat3-BFiNYDsN.js";import"./MapView-DSEG58Vw.js";import"./ColorBackground-DAw2yfR3.js";import"./Cyclical-CLn7hsuB.js";import"./Basemap-k8u9Dws0.js";import"./writeUtils-C3diJNrM.js";import"./catalogUtils-BJz3irce.js";import"./basemapUtils-CGXsPDdl.js";import"./TablesMixin-BKp09Z6d.js";import"./TileInfo-Dk9uCRYd.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-DjBUSSkK.js";import"./UpdatingHandles-zK6lTSR_.js";import"./signal-DP5RWzoB.js";import"./GraphicsCollection-DzZrErgs.js";import"./ReactiveMap-DRDgXWgj.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./vec2-CgyBqi1o.js";import"./unitBezier-BX6NeAEr.js";import"./HighlightOptions-B7QiFSBW.js";import"./TileKey-Dgh4sNOY.js";import"./QueueProcessor-BmGs_UFN.js";import"./quickselect-D0_cvEX6.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-Bqs2SYG7.js";import"./GoTo-BEAdB0HU.js";import"./Zoom-iGv8K8X_.js";import"./vec3f32-nZdmKIgz.js";import"./Container-CLPp6KHl.js";import"./EffectView-CbPcRkGs.js";import"./highlightReasons-DUPj5iXj.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-BqgeR2O3.js";import"./layerViewUtils-DaObYqcz.js";import"./Bitmap-C9bM1Qz4.js";let t=class extends c(h(d)){update(r){this._strategy.update(r).catch(i=>{e(i)||a.getLogger(this).error(i)}),this.notifyChange("updating")}attach(){this._bitmapContainer=new n,this.container.addChild(this._bitmapContainer),this._strategy=new y({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this._strategy.destroy(),this._strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(r,i,m){return this.layer.fetchImageBitmap(r,i,m)}async doRefresh(){this.requestUpdate()}isUpdating(){return this._strategy.updating||this.updateRequested}};o([p()],t.prototype,"_strategy",void 0),o([p()],t.prototype,"updating",void 0),t=o([s("esri.views.2d.layers.BaseDynamicLayerView2D")],t);const lt=t;export{lt as default};
