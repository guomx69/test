import{e as r,y as o,a as m,gC as g,aN as l,n as d,a7 as u}from"./index-BmjI5m14.js";import{c}from"./GraphicsCollection-pK0l7ODh.js";import{a as y}from"./BitmapContainer-DP6CQ27w.js";import{f,y as x}from"./LayerView-DZb4jurC.js";import{V as _}from"./GraphicsView2D-CKsLZUa_.js";import{h as w}from"./HighlightGraphicContainer-CWfk_12h.js";import{_ as H}from"./ExportStrategy-BTFz_3kK.js";import{i as v}from"./timeSupport-Bh5EjHWG.js";import{i as I}from"./RefreshableLayerView-D2RoS3PO.js";import{_ as $,r as V}from"./MapServiceLayerViewHelper-B7qUJove.js";import"./WGLContainer-BZsRvzGl.js";import"./definitions-Y_v3njP4.js";import"./LabelMetric-BvTusz4l.js";import"./enums-BRXbslMp.js";import"./Texture-C8FuZgxb.js";import"./enums-BlUEVwJR.js";import"./Program-CHAmCmj6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./ProgramTemplate-DEFjy195.js";import"./mat2df32-DQZYU_j6.js";import"./mat3-B5QNrnhe.js";import"./MapView-SI0KhNQn.js";import"./ColorBackground-BoPT6jnX.js";import"./Cyclical-BOAkOq_x.js";import"./Basemap-CmtSPRGE.js";import"./writeUtils-5mMxftrq.js";import"./catalogUtils-BSvrRBwV.js";import"./basemapUtils-DB3FNVLC.js";import"./TablesMixin-CoVbki-z.js";import"./workers-BHA0Wr2q.js";import"./TileInfo-BdJKaulZ.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-1nGWSa9F.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-DArC9FGH.js";import"./signal-3wIDwozO.js";import"./HeightModelInfo--r7pBMJX.js";import"./ReactiveMap-Coht5-wF.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./vec2-1tP-gqzO.js";import"./unitBezier-BX6NeAEr.js";import"./HighlightOptions-Cb8X6VS2.js";import"./TileKey-Btwk1Tg3.js";import"./QueueProcessor-Dsg51chu.js";import"./quickselect-D0_cvEX6.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-B08eROGw.js";import"./GoTo-qV1ikz1F.js";import"./vec3f32-nZdmKIgz.js";import"./Container-Bwt0_-ga.js";import"./EffectView-CSuUuDHe.js";import"./highlightReasons-D5PQQfB7.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-BqgeR2O3.js";import"./layerViewUtils-DaObYqcz.js";import"./CIMSymbolHelper-DuB-oW62.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-Ck9oI5PT.js";import"./GeometryUtils-Dmb-U13R.js";import"./Rect-CUzevAry.js";import"./AttributeStore-DrBOGh_N.js";import"./UpdateTracking2D-k--4fYl3.js";import"./BindType-BmZEZMMh.js";import"./Util-bbF3qMVo.js";import"./TimeOnly-LoI9wcVJ.js";import"./timeSupport-DhHtKeeb.js";import"./json-Wa8cmqdu.js";import"./FeatureCommandQueue-CnRA5ozG.js";import"./constants-D5zmR9t2.js";import"./normalizeUtilsSync-D0Wa6qoj.js";import"./AGraphicContainer-DVWK-Clp.js";import"./TechniqueInstance-BXL_MIhV.js";import"./TileContainer-jbtVk_u3.js";import"./Bitmap-BGsuWTLK.js";import"./popupUtils-RTz6NhDh.js";const E=t=>{let e=class extends t{initialize(){this.exportImageParameters=new g({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var i;return v(this.layer,(i=this.view)==null?void 0:i.timeExtent,this._get("timeExtent"))}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"floors",null),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o()],e.prototype,"suspended",void 0),r([o({readOnly:!0})],e.prototype,"timeExtent",null),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let a=class extends E(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new c,this._updateHash=""}fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{l(i)||d.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,p=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new _({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new $({createFetchPopupFeaturesQueryGeometry:(s,h)=>V(s,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,h)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:p,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,p){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,e,i,p){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],a.prototype,"strategy",void 0),r([o()],a.prototype,"updating",void 0),a=r([m("esri.views.2d.layers.MapImageLayerView2D")],a);const ii=a;export{ii as default};
