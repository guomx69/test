import{e as s,y as l,dq as n,a as h,V as d,a7 as o,aa as y,dp as V}from"./index-BmjI5m14.js";import{y as m,f as w}from"./LayerView-DZb4jurC.js";import"./Container-Bwt0_-ga.js";import"./MapView-SI0KhNQn.js";import"./ColorBackground-BoPT6jnX.js";import"./Cyclical-BOAkOq_x.js";import"./Basemap-CmtSPRGE.js";import"./writeUtils-5mMxftrq.js";import"./catalogUtils-BSvrRBwV.js";import"./basemapUtils-DB3FNVLC.js";import"./TablesMixin-CoVbki-z.js";import"./workers-BHA0Wr2q.js";import"./TileInfo-BdJKaulZ.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-1nGWSa9F.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-DArC9FGH.js";import"./signal-3wIDwozO.js";import"./GraphicsCollection-pK0l7ODh.js";import"./HeightModelInfo--r7pBMJX.js";import"./ReactiveMap-Coht5-wF.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./vec2-1tP-gqzO.js";import"./mat2df32-DQZYU_j6.js";import"./mat3-B5QNrnhe.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./HighlightOptions-Cb8X6VS2.js";import"./TileKey-Btwk1Tg3.js";import"./QueueProcessor-Dsg51chu.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-B08eROGw.js";import"./GoTo-qV1ikz1F.js";import"./EffectView-CSuUuDHe.js";import"./highlightReasons-D5PQQfB7.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-C8FuZgxb.js";import"./layerViewUtils-DaObYqcz.js";let r=class extends m{constructor(i){super(i),this.type="group",this.layerViews=new d}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),o(()=>{var i;return(i=this.layer)==null?void 0:i.visibilityMode},()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},y),o(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},y)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}get creatingLayerViews(){var i,e;return((e=(i=this.view)==null?void 0:i.layerViewManager)==null?void 0:e.isCreatingLayerViewsForLayer(this.layer))??!1}set layerViews(i){this._set("layerViews",V(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.creatingLayerViews||this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>{const t=this._findLayerViewForLayer(e);return!!(t!=null&&t.visible)});return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder())==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(t=>o(()=>t.visible,a=>this._applyVisibility(()=>{a!==this.visible&&(t.visible=this.visible)},()=>this._applyExclusiveVisibility(a?t:null)),y)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e!=null&&e.visible?e:null))}_applyVisibility(i,e){var t,a;this._hasLayerViewVisibleOverrides()&&(((t=this.layer)==null?void 0:t.visibilityMode)==="inherited"?i():((a=this.layer)==null?void 0:a.visibilityMode)==="exclusive"&&e())}};s([l({readOnly:!0})],r.prototype,"creatingLayerViews",null),s([l({cast:n})],r.prototype,"layerViews",null),s([l({readOnly:!0})],r.prototype,"updatingProgress",null),s([l()],r.prototype,"view",void 0),r=s([h("esri.views.layers.GroupLayerView")],r);const v=r;let p=class extends w(v){attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(i){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((i,e)=>this.container.addChildAt(i.container,e))}};p=s([h("esri.views.2d.layers.GroupLayerView2D")],p);const oi=p;export{oi as default};
