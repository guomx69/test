import{bG as c,bN as g,bO as p,ba as y}from"./index-3fJYBySH.js";import{a as m}from"./WebMap-GXXWVoPf.js";import"./ColorBackground-BTSOmsFp.js";import"./Cyclical-CpBqPbE5.js";import"./Basemap-BF_RVH--.js";import"./writeUtils-E4KNM9sp.js";import"./catalogUtils-C5l7KsZQ.js";import"./basemapUtils-Dj_1vtFV.js";import"./TablesMixin-BJRVIsxi.js";import"./jsonContext-BE6tJwxD.js";import"./project-e7_uneTN.js";async function R(a,e,o){const t=c(a),r=e.toJSON();r.traceLocations=JSON.stringify(e.traceLocations),e.resultTypes&&(r.resultTypes=JSON.stringify(e.resultTypes));const n=g(t.query,{query:p({...r,f:"json"}),...o}),i=`${t.path}/trace`;return y(i,n).then(s=>u(s,e.outSpatialReference))}async function q(a,e,o){const t=c(a),r=e.toJSON();r.traceLocations=JSON.stringify(e.traceLocations),e.resultTypes&&(r.resultTypes=JSON.stringify(e.resultTypes));const n=g(t.query,{query:p({...r,async:!0,f:"json"}),...o}),i=`${t.path}/trace`,{data:s}=await y(i,n);return s.statusUrl}function u(a,e){const{data:o}=a,t=m.fromJSON(o.traceResults);return t.aggregatedGeometry&&e&&(t.aggregatedGeometry.line&&(t.aggregatedGeometry.line.spatialReference=e.clone()),t.aggregatedGeometry.multipoint&&(t.aggregatedGeometry.multipoint.spatialReference=e.clone()),t.aggregatedGeometry.polygon&&(t.aggregatedGeometry.polygon.spatialReference=e.clone())),t}export{q as submitTraceJob,R as trace};
