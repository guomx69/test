import{e,y as f,a as u,bg as l,bG as d,bO as y,bN as b,ba as N}from"./index-BWzlmsaF.js";import{d as h}from"./WebMap-CxtaTK_D.js";import"./ColorBackground-DAw2yfR3.js";import"./Cyclical-CLn7hsuB.js";import"./Basemap-k8u9Dws0.js";import"./writeUtils-C3diJNrM.js";import"./catalogUtils-BJz3irce.js";import"./basemapUtils-CGXsPDdl.js";import"./TablesMixin-BKp09Z6d.js";import"./jsonContext-3NKi26Pb.js";import"./project-eBAhF45W.js";let a=class extends l{constructor(s){super(s),this.namedTraceConfigurations=[]}};e([f({type:[h],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],a.prototype,"namedTraceConfigurations",void 0),a=e([u("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],a);const C=a;async function v(s,t,i){const o=d(s),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const n={...r,f:"json"},g=y({...o.query,...n}),m=b(g,{...i,method:"post"}),c=`${o.path}/traceConfigurations/query`,{data:p}=await N(c,m);return C.fromJSON(p)}export{v as queryNamedTraceConfigurations};
