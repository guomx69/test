import{e as s,y as i,a as d,bg as h,bK as n,bJ as f,b as g,bG as S,bN as y,ba as R,fL as b}from"./index-C74WJ1Ej.js";let o=class extends h{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:f(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],o.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],o.prototype,"outSpatialReference",void 0),s([i()],o.prototype,"transformation",void 0),s([i()],o.prototype,"transformForward",void 0),o=s([d("esri.rest.support.ProjectParameters")],o);const w=o,J=g(w);async function j(e,t,r){t=J(t);const a=S(e),p={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,u=f(t.geometries[0]),c=y(p,r);return R(a.path+"/project",c).then(({data:{geometries:l}})=>b(l,u,m))}export{j as n,w as p};
