import{aR as m,bd as c,n as _,e as u,y as w,a as g}from"./index-Bk13oInq.js";import{r as I,n as f}from"./imageUtils-5_o_txSN.js";import{f as S,y as T}from"./LayerView-Lu0V4hoe.js";import{h as V,m as v,r as x}from"./HighlightOptions-DDS_yKQv.js";import{e as d}from"./TileKey--6M9Nr4r.js";import{i as M}from"./RefreshableLayerView-Zr81cynh.js";import"./MapView-CnzZs5CS.js";import"./ColorBackground-eCqVLvQh.js";import"./Cyclical-DJv7mGBZ.js";import"./Basemap-DRYqJJ3x.js";import"./writeUtils-CuGAkQa7.js";import"./catalogUtils-8MGqu6UW.js";import"./basemapUtils-CYwIlTGS.js";import"./TablesMixin-C8r3nFk7.js";import"./TileInfo-YUEK5NHk.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BqCOQaP5.js";import"./UpdatingHandles-BbNCyyZd.js";import"./signal-OzWV8BHP.js";import"./GraphicsCollection-CfPNlBPF.js";import"./ReactiveMap-Da-zqImQ.js";import"./ViewingMode-dBUh39ak.js";import"./vec2f64-CaE_5U6X.js";import"./vec2-BCOFwZS_.js";import"./mat2df32-R1u-v0DR.js";import"./mat3-C14MOv1v.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-Qth4t0nf.js";import"./GoTo-4Mtk1asH.js";import"./Zoom-DXKbY9hl.js";import"./Bitmap-_R7S8flh.js";import"./Container-6q8gvuqA.js";import"./EffectView-DjOH8g88.js";import"./highlightReasons-COwmR_fj.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-BEO3u2nF.js";import"./WGLContainer-C_q-a8yP.js";import"./LabelMetric-CEVwe__6.js";import"./enums-BRXbslMp.js";import"./Program-Zm_RPRKO.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./ProgramTemplate-hUSSPUdw.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-BqgeR2O3.js";import"./TileContainer-BS8vH-8_.js";import"./layerViewUtils-DaObYqcz.js";import"./QueueProcessor-BAwGOb3p.js";import"./quickselect-D0_cvEX6.js";const q=new Set([102113,102100,3857,3785,900913]),R=[0,0];let a=class extends M(I(S(T))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){const t=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return t?(t.id!==this.layer.activeLayer.tileMatrixSetId&&(this.layer.activeLayer.tileMatrixSetId=t.id),t):null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume()}attach(){var e;const t=(e=this.tileMatrixSet)==null?void 0:e.tileInfo;t&&(this._tileInfoView=new V(t),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:16,process:(i,r)=>this.fetchTile(i,r)}),this._tileStrategy=new x({cachePolicy:"keep",resampling:!0,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>{var i,r;return[(r=(i=this.layer)==null?void 0:i.activeLayer)==null?void 0:r.styleId,this.tileMatrixSet]},()=>this.doRefresh())),super.attach())}detach(){var t,e;super.detach(),(t=this._tileStrategy)==null||t.destroy(),(e=this._fetchQueue)==null||e.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return((e=this.layer.activeLayer.tileMatrixSets)==null?void 0:e.some(i=>{var r;return m((r=i.tileInfo)==null?void 0:r.spatialReference,t)}))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(R,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:s=0}=e;if(!i)return this._fetchImage(t,r);const o=new d(0,0,0,0);let h;try{await i.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:r}),h=await this._fetchImage(o,r)}catch(l){if(c(l))throw l;if(s<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const p=new d(n),y=await this.fetchTile(p,{...e,resamplingLevel:s+1});return f(this._tileInfoView,y,p,t)}}throw l}return f(this._tileInfoView,h,o,t)}canResume(){const t=super.canResume();return t&&this.tileMatrixSet!==null}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){c(e)||_.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}_getTileMatrixSetBySpatialReference(t){const e=this.view.spatialReference;if(!t.tileMatrixSets)return null;let i=t.tileMatrixSets.find(r=>{var s;return m((s=r.tileInfo)==null?void 0:s.spatialReference,e)});return!i&&e.isWebMercator&&(i=t.tileMatrixSets.find(r=>{var s;return q.has(((s=r.tileInfo)==null?void 0:s.spatialReference.wkid)??-1)})),i}};u([w({readOnly:!0})],a.prototype,"tileMatrixSet",null),a=u([g("esri.views.2d.layers.WMTSLayerView2D")],a);const Ut=a;export{Ut as default};
