import{e,y as f,a as u,bg as l,bG as d,bO as y,bN as b,ba as N}from"./index-C74WJ1Ej.js";import{d as h}from"./WebMap-CYQSgH6U.js";import"./ColorBackground-Cz11kJEY.js";import"./Cyclical-CGQ82qVc.js";import"./Basemap-CChUmcwG.js";import"./writeUtils--pheT9z-.js";import"./catalogUtils-C78LuP4L.js";import"./basemapUtils-BT4ik6o6.js";import"./TablesMixin-dyTIXPa2.js";import"./jsonContext-C8MzWjwy.js";import"./project-DdBy3-Vz.js";let a=class extends l{constructor(s){super(s),this.namedTraceConfigurations=[]}};e([f({type:[h],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],a.prototype,"namedTraceConfigurations",void 0),a=e([u("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],a);const C=a;async function v(s,t,i){const o=d(s),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const n={...r,f:"json"},g=y({...o.query,...n}),m=b(g,{...i,method:"post"}),c=`${o.path}/traceConfigurations/query`,{data:p}=await N(c,m);return C.fromJSON(p)}export{v as queryNamedTraceConfigurations};
