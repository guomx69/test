const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/featureLayerUtils-CnZnaklN.js","assets/index-DeC8R2EY.js","assets/index-CXj0dB5Q.css","assets/saveAPIKeyUtils-CCJXxOGa.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/utils-DxTtKyLp.js","assets/jsonContext-DYXQjUFR.js","assets/saveUtils-CKqBv-Yn.js","assets/lazyLayerLoader-DImo0f-M.js","assets/FeatureLayerSource-B8TUuCUp.js","assets/uuid-fwrPAdZb.js","assets/MeshLocalVertexSpace-DaygWvfP.js","assets/meshVertexSpaceUtils-BVcwBUJW.js","assets/External-D7VKebi2.js","assets/mat4f64-CSKppSlJ.js","assets/quat-DLKqu090.js","assets/mat3f64-q3fE-ZOt.js","assets/quatf64-Bdb9ZJJK.js","assets/editingSupport-DmQ75Sjr.js","assets/EditBusLayer-8381OIDc.js","assets/clientSideDefaults-PPqE8_Et.js","assets/QueryEngineCapabilities-CTDe3LlQ.js","assets/editsZScale-DTdLYNgF.js"])))=>i.map(i=>d[i]);
import{gf as Z,iC as z,bu as M,A as k,l as m,E as H,bG as U,P as B,n as T,h8 as R,e as s,i as K,D as P,b as X,y as n,a as E,V as q,a6 as Y,ds as ee,gV as te,dt as ie,eN as re,eZ as se,eO as ae,eP as oe,eQ as ne,e_ as le,e$ as ue,dw as de,B as pe,gg as ye,aK as ce,gi as he,iD as fe,ho as me,N as I,iE as ge,iF as be,I as we,aO as x,gW as G,hc as ve,hd as _e,h6 as Q,hp as Fe,q as Se,im as Te,h9 as W,hq as Ie,hr as Ee,hs as $e,iG as De,gY as Oe,ht as je,m as A,hh as Ce,gx as qe,hu as Le,hv as Me,ir as Re,iH as Pe,hw as xe,fH as Ge,hx as Ae,hy as Ne,hz as Je,hA as Ve,hB as ke,hC as Qe,U as We,gX as Ze,hD as ze,h as y,k as $,iI as N,aq as D,d as He,iJ as Ue,iK as Be,eR as Ke,g_ as Xe,g$ as Ye,h0 as O,iL as J,hF as et,iM as tt,eS as it,iN as rt,h2 as st,dh as at,h3 as ot,h4 as nt,h5 as lt,hE as ut,du as dt}from"./index-DeC8R2EY.js";import{R as pt,V as yt}from"./FeatureLayerBase-EBb2I_nT.js";import{p as ct}from"./workers-BguUern_.js";import{i as ht}from"./editsZScale-DTdLYNgF.js";import{F as ft}from"./EditBusLayer-8381OIDc.js";import{c as mt}from"./FeatureEffectLayer-CE2Q1cAv.js";import{c as gt}from"./FeatureReductionLayer-vAjgliOm.js";import{p as bt}from"./OrderedLayer-w-3MZAaj.js";import{s as wt}from"./fieldProperties-DODbFAxB.js";import{t as vt}from"./styleUtils-DAM41-wy.js";import{S as _}from"./TopFeaturesQuery-CSoj0bgW.js";import{A as F}from"./interfaces-CL2NbQte.js";import"./HeightModelInfo-Dglyqlez.js";import"./uuid-fwrPAdZb.js";import"./FeatureEffect-D1PpR74G.js";import"./FeatureReductionSelection-BCh-NaTk.js";import"./MD5-C9MwAd2G.js";import"./OrderByInfo-Br9M7bNj.js";let _t=0,g=class extends Z.LoadableMixin(z(q)){constructor(e){super(e),this._idToClientGraphic=null,this.type="memory"}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null}get _workerGeometryType(){var t;const e=(t=this.layer)==null?void 0:t.geometryType;return e?this._geometryTypeRequiresClientGraphicMapping(e)?"polygon":e:null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}async queryFeatures(e,t={}){await this.load(t);const i=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);M(e,this.layer.spatialReference,i);const r=k.fromJSON(i);if(!this._requiresClientGraphicMapping())return r;const a=this.layer.objectIdField;for(const l of r.features){const u=l.attributes[a],c=this._idToClientGraphic.get(u);c&&(l.geometry=c.geometry)}return r.geometryType=this.layer.geometryType,r}async queryFeaturesJSON(e,t={}){if(this._requiresClientGraphicMapping())throw new m("query-features-json:unsupported","Cannot query in JSON format for client only geometry types (mesh and extent)");await this.load(t);const i=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return M(e,this.layer.spatialReference,i),i}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(i=>({count:i.count,extent:H.fromJSON(i.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async _applyEdits(e){if(!this._connection)throw new m("feature-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField;let i=null;const r=[],a=[];await Promise.all([this._prepareClientMapping(e.addFeatures,null),this._prepareClientMapping(e.updateFeatures,null)]);const l=d=>"objectId"in d&&d.objectId!=null?d.objectId:"attributes"in d&&d.attributes[t]!=null?d.attributes[t]:null;if(e.addFeatures&&(i=this._prepareAddFeatures(e.addFeatures)),e.deleteFeatures)for(const d of e.deleteFeatures){const f=l(d);f!=null&&r.push(f)}const u=e.updateFeatures&&this._idToClientGraphic?new Map:null;if(e.updateFeatures){for(const d of e.updateFeatures)if(a.push(this._serializeFeature(d)),u){const f=l(d);f!=null&&u.set(f,d)}}ht(i?i.features:null,a,this.layer.spatialReference);const{fullExtent:c,featureEditResults:p}=await this._connection.invoke("applyEdits",{adds:i?i.features:[],updates:a,deletes:r});return this.fullExtent=c,i&&i.finish(p.uidToObjectId),this._updateClientGraphicIds(u,p),this._createEditsResult(p)}async _prepareClientMapping(e,t){if(this._layerOrSourceGeometryType!=="mesh"||e==null)return;const i=[];for(const{geometry:r}of e)r==null||r.type!=="mesh"||r.hasExtent||r.loaded||i.push(r.load({signal:t}));i.length&&await Promise.all(i)}_updateClientGraphicIds(e,t){if(this._idToClientGraphic){if(e)for(const i of t.updateResults){if(!i.success)continue;const r=e.get(i.objectId);r!=null&&this._addIdToClientGraphic(r)}for(const i of t.deleteResults)i.success&&this._idToClientGraphic.delete(i.objectId)}}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new m("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}_prepareAddFeatures(e){const t=new Map,i=new Array(e.length);let r=null;for(let l=0;l<e.length;l++){const u=e[l],c=this._serializeFeature(u);r||u.geometry==null||(r=u.geometry.type),i[l]=c,t.set(`${c.uid}`,u)}const a=this;return{features:i,inferredGeometryType:r,finish(l){const u=a.sourceJSON.objectIdField;for(const c in l){const p=l[c],d=t.get(c);d&&(d.attributes||(d.attributes={}),p===-1?delete d.attributes[u]:d.attributes[u]=p,a._addIdToClientGraphic(d))}}}}_addIdToClientGraphic(e){var r;if(!this._idToClientGraphic)return;const t=this.sourceJSON.objectIdField,i=(r=e.attributes)==null?void 0:r[t];i!=null&&this._idToClientGraphic.set(i,e)}get _layerOrSourceGeometryType(){var e,t;return((e=this.layer)==null?void 0:e.geometryType)??((t=this.sourceJSON)==null?void 0:t.geometryType)}_requiresClientGraphicMapping(){return this._geometryTypeRequiresClientGraphicMapping(this._layerOrSourceGeometryType)}_geometryRequiresClientGraphicMapping(e){return this._geometryTypeRequiresClientGraphicMapping(e.type)}_geometryTypeRequiresClientGraphicMapping(e){return e==="mesh"||e==="multipatch"||e==="extent"}_serializeFeature(e){const{attributes:t}=e,i=this._geometryForSerialization(e),r=(_t++).toString();return i?{uid:r,geometry:i.toJSON(),attributes:t}:{uid:r,attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:this._geometryRequiresClientGraphicMapping(t)?t.extent?U.fromExtent(t.extent):null:t}async _startWorker(e){this._connection=await ct("MemorySourceWorker",{strategy:B("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:i,objectIdField:r,hasM:a,hasZ:l,timeInfo:u,dateFieldsTimeZone:c}=this.layer,p=this.layer.originOf("spatialReference")==="defaults";await this._prepareClientMapping(this.items,e);const d=this._prepareAddFeatures(this.items);this.addHandles(this.on("before-changes",w=>{T.getLogger(this).error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"),w.preventDefault()}));const f={features:d.features,fields:t==null?void 0:t.map(w=>w.toJSON()),geometryType:R.toJSON(this._workerGeometryType),hasM:this._layerOrSourceGeometryType!=="mesh"&&a,hasZ:this._layerOrSourceGeometryType==="mesh"||l,objectIdField:r,spatialReference:p?null:i&&i.toJSON(),timeInfo:(u==null?void 0:u.toJSON())??null,dateFieldsTimeZone:c},b=await this._connection.invoke("load",f,{signal:e});for(const w of b.warnings)T.getLogger(this.layer).warn("#load()",`${w.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:w});b.featureErrors.length&&T.getLogger(this.layer).warn("#load()",`Encountered ${b.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:b.featureErrors});const L=b.layerDefinition;this._geometryTypeRequiresClientGraphicMapping(d.inferredGeometryType)&&(L.geometryType=R.toJSON(d.inferredGeometryType)),this.sourceJSON=L,this._requiresClientGraphicMapping()&&(this._idToClientGraphic=new Map),d.finish(b.assignedObjectIds)}};s([K({Type:P,ensureType:X(P)})],g.prototype,"itemType",void 0),s([n()],g.prototype,"type",void 0),s([n({constructOnly:!0})],g.prototype,"layer",void 0),s([n({readOnly:!0})],g.prototype,"_workerGeometryType",null),s([n()],g.prototype,"sourceJSON",void 0),g=s([E("esri.layers.graphics.sources.MemorySource")],g);let v=class extends Y{constructor(){super(...arguments),this.updating=!1,this.status="unknown"}};s([n()],v.prototype,"updating",void 0),s([n()],v.prototype,"status",void 0),v=s([E("esri.layers.support.PublishingInfo")],v);const Ft=v,St=Symbol(),Tt=e=>{var t;let i=class extends e{constructor(){super(...arguments),this[t]=!0}get publishingInfo(){if(this.destroyed)return null;const r=this._get("publishingInfo");if(r)return r;const a=new Ft;return this._checkPublishingStatus(a),a}_checkPublishingStatus(r){let u=0;const c=async d=>{let f;r.updating=!0;try{f=await this.fetchPublishingStatus()}catch{f="unavailable"}f!=="published"&&f!=="unavailable"||(r.status==="publishing"&&this.refresh(),p.remove()),r.status=f,r.updating=!1,p.removed||(u=setTimeout(c,d,d+125))},p={removed:!1,remove(){this.removed=!0,clearTimeout(u)}};this.when().catch(()=>p.remove()),c(250),this.addHandles(p)}};return t=St,s([n({readOnly:!0,clonable:!1})],i.prototype,"publishingInfo",null),i=s([E("esri.layers.mixins.PublishableLayer")],i),i},h="FeatureLayer";function S(e,t){return new m("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function V(e){return e&&e instanceof q}const j=wt();function C(e,t,i){const r=!!(i!=null&&i.writeLayerSchema);return{enabled:r,ignoreOrigin:r}}let o=class extends pt(gt(mt(Tt(ft(ee(bt(te(ie(re(se(ae(oe(ne(le(ue(de(dt))))))))))))))))){constructor(...e){super(...e),this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=pe.WGS84,this.subtypeCode=null,this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=ye(async(t,i,r)=>{const{save:a,saveAs:l}=await A(()=>import("./featureLayerUtils-CnZnaklN.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]));switch(t){case F.SAVE:return a(this,i);case F.SAVE_AS:return l(this,r,i)}})}destroy(){var e;(e=this.source)==null||e.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){var r;const t=e!=null?e.signal:null;if((r=this.portalItem)!=null&&r.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then(a=>this.initLayerProperties(a))),Promise.resolve(this);const i=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(ce).then(async()=>{if(this.url&&this.layerId==null&&/FeatureServer|MapServer\/*$/i.test(this.url)){const a=await this._fetchFirstValidLayerId(t);a!=null&&(this.layerId=a)}if(!this.url&&!this._hasMemorySource())throw new m("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))}).then(()=>he(this,"load",e));return this.addResolvingPromise(i),Promise.resolve(this)}readCapabilities(e,t){return t=t.layerDefinition||t,fe(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){var e;return!(this.loaded&&!((e=this.capabilities)!=null&&e.operations.supportsEditing))&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,i){return this._readEditingEnabled(t,!0,i)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,i,r){this._writeEditingEnabled(e,t,!0,r)}get effectiveEditingEnabled(){return me(this)}readIsTable(e,t){return(t=(t==null?void 0:t.layerDefinition)??t).type==="Table"||!t.geometryType}writeIsTable(e,t,i,r){r!=null&&r.writeLayerSchema&&I(i,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return ge(t.layerDefinition||t)}readObjectIdField(e,t){return be(t.layerDefinition||t)}get parsedUrl(){const e=we(this.url);return e!=null&&(this.dynamicDataSource!=null?e.path=x(e.path,"dynamicLayer"):this.layerId!=null&&(e.path=x(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){G(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,i){var a;t=t.layerDefinition||t;const r=(a=t.drawingInfo)==null?void 0:a.renderer;if(r){const l=ve(r,t,i)??void 0;return l||T.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:i}),l}return _e(t,i)}set source(e){const t=this._get("source");t!==e&&(V(t)&&this._resetMemorySource(t),V(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof q?new g({layer:this,items:e}):e:null}readSource(e,t){const i=k.fromJSON(t.featureSet);return new g({layer:this,items:(i==null?void 0:i.features)??[]})}readTemplates(e,t){const i=t.editFieldsInfo,r=i==null?void 0:i.creatorField,a=i==null?void 0:i.editorField;return e=e==null?void 0:e.map(l=>Q.fromJSON(l)),this._fixTemplates(e,r),this._fixTemplates(e,a),e}readTitle(e,t){var a,l,u;const i=((a=t.layerDefinition)==null?void 0:a.name)??t.name,r=t.title||((l=t.layerDefinition)==null?void 0:l.title);if(i){const c=(u=this.portalItem)==null?void 0:u.title;if(this.sublayerTitleMode==="item-title")return this.url?Fe(this.url,i):i;let p=i;if(!p&&this.url){const d=Se(this.url);d!=null&&(p=d.title)}return p?(this.sublayerTitleMode==="item-title-and-service-name"&&c&&c!==p&&(p=c+" - "+p),Te(p)):void 0}if(this.sublayerTitleMode==="item-title"&&r)return r}readTitleFromWebMap(e,t){var i;return t.title||((i=t.layerDefinition)==null?void 0:i.name)}readTypeIdField(e,t){let i=(t=t.layerDefinition||t).typeIdField;if(i&&t.fields){i=i.toLowerCase();const r=t.fields.find(a=>a.name.toLowerCase()===i);r&&(i=r.name)}return i}readTypes(e,t){e=(t=t.layerDefinition||t).types;const i=t.editFieldsInfo,r=i==null?void 0:i.creatorField,a=i==null?void 0:i.editorField;return e==null?void 0:e.map(l=>(l=W.fromJSON(l),this._fixTemplates(l.templates,r),this._fixTemplates(l.templates,a),l))}readVisible(e,t){var i;return((i=t.layerDefinition)==null?void 0:i.defaultVisibility)!=null?!!t.layerDefinition.defaultVisibility:t.visibility!=null?!!t.visibility:void 0}async addAttachment(e,t){return Ie(this,e,t,h)}async updateAttachment(e,t,i){return Ee(this,e,t,i,h)}async applyEdits(e,t){return $e(this,e,t)}async uploadAssets(e,t){return De(this,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return Oe(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:t}=await je(A(()=>import("./FeatureLayerSource-B8TUuCUp.js"),__vite__mapDeps([9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22])),e);return new t({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:e})}createQuery(){const e=Ce(this);e.dynamicDataSource=this.dynamicDataSource;const t=this.subtypeCode!=null?`${this.subtypeField} = ${this.subtypeCode}`:null,i=qe(this.definitionExpression,t);return e.where=i||"1=1",e}async deleteAttachments(e,t){return Le(this,e,t,h)}async fetchRecomputedExtents(e){return Me(this,e,h)}getFeatureType(e){return Re(this.types,this.typeIdField,e)}getFieldDomain(e,t){var l;const i=t==null?void 0:t.feature,r=Pe(this,i);if(r){const u=(l=r.domains)==null?void 0:l[e];return(u==null?void 0:u.type)==="inherited"?this._getLayerDomain(e):u}const a=this.getFeatureType(i);if(a){const u=a.domains&&a.domains[e];if(u&&u.type!=="inherited")return u}return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}async queryAttachments(e,t){return xe(this,e,t,h)}async queryFeatures(e,t){const i=await this.load(),r=await i.source.queryFeatures(Ge.from(e)??i.createQuery(),t);if(r!=null&&r.features)for(const a of r.features)a.layer=a.sourceLayer=i;return r}async queryObjectIds(e,t){return Ae(this,e,t,h)}async queryFeatureCount(e,t){return Ne(this,e,t,h)}async queryExtent(e,t){return Je(this,e,t,h)}async queryRelatedFeatures(e,t){return Ve(this,e,t,h)}async queryRelatedFeaturesCount(e,t){return ke(this,e,t,h)}async queryTopFeatures(e,t){var l;const{source:i,capabilities:r}=await this.load();if(!i.queryTopFeatures||!((l=r==null?void 0:r.query)!=null&&l.supportsTopFeaturesQuery))throw new m(h,"Layer source does not support queryTopFeatures capability");const a=await i.queryTopFeatures(_.from(e),t);if(a!=null&&a.features)for(const u of a.features)u.layer=u.sourceLayer=this;return a}async queryTopObjectIds(e,t){const{source:i,capabilities:r}=await this.load();if(!i.queryTopObjectIds||!(r!=null&&r.query.supportsTopFeaturesQuery))throw new m(h,"Layer source does not support queryTopObjectIds capability");return i.queryTopObjectIds(_.from(e),t)}async queryTopFeaturesExtent(e,t){var a;const{source:i,capabilities:r}=await this.load();if(!i.queryTopExtents||!((a=r==null?void 0:r.query)!=null&&a.supportsTopFeaturesQuery))throw new m(h,"Layer source does not support queryTopExtents capability");return i.queryTopExtents(_.from(e),t)}async queryTopFeatureCount(e,t){var a;const{source:i,capabilities:r}=await this.load();if(!i.queryTopCount||!((a=r==null?void 0:r.query)!=null&&a.supportsTopFeaturesQuery))throw new m(h,"Layer source does not support queryFeatureCount capability");return i.queryTopCount(_.from(e),t)}read(e,t){const i=e.featureCollection;if((i||e.type==="Feature Collection")&&(this.resourceInfo=e),i){const r=i.layers;r&&r.length===1&&(super.read(r[0],t),i.showLegend!=null&&super.read({showLegend:i.showLegend},t))}super.read(e,t),t&&t.origin==="service"&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:(t==null?void 0:t.origin)??void 0,writeLayerSchema:(t==null?void 0:t.writeLayerSchema)??this._hasMemorySource()};const{origin:i,layerContainerType:r,messages:a}=t;if(this.dynamicDataSource)return a==null||a.push(S(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if((i==="web-map"||i==="web-scene")&&r!=="tables")return a==null||a.push(S(this,`a table source can only be written to tables, not ${r}`)),null;if(this._hasMemorySource())return a==null||a.push(S(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&(i==="web-map"||i==="web-scene")&&r==="tables")return a==null||a.push(S(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new m(h,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){var t;return!!this.loaded&&(((t=this.source)==null?void 0:t.type)==="memory"||Qe(this,e))}async save(e){return this._debouncedSaveOperations(F.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(F.SAVE_AS,t,e)}_readEditingEnabled(e,t,i){var a;let r=(a=e.layerDefinition)==null?void 0:a.capabilities;return r?this._hasEditingCapability(r):(r=e.capabilities,t&&(i==null?void 0:i.origin)==="web-map"&&!this._hasMemorySource()&&r?this._hasEditingCapability(r):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map(t=>t.trim()).includes("editing")}_writeEditingEnabled(e,t,i,r){var a,l;if(!e){const u=(l=(a=this.capabilities)==null?void 0:a.operations)!=null&&l.supportsSync?"Query,Sync":"Query";I("layerDefinition.capabilities",u,t),i&&!(r!=null&&r.writeLayerSchema)&&(t.capabilities=u)}}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}_fetchFirstValidLayerId(e){return We(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t=>{const i=t.data;if(i)return this.findFirstValidLayerId(i)})}async initLayerProperties(e){var t;return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(t=this.portalItem)==null?void 0:t.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),G(this.renderer,this.fieldsIndex),Ze(this.timeInfo,this.fieldsIndex),vt(this,{origin:"service"})}async hasDataChanged(){return ze(this)}async fetchPublishingStatus(){const e=this.source;return e!=null&&e.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){var t,i;const e=((t=this.parsedUrl)==null?void 0:t.path)??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||e.search(/\/FeatureServer\//i)!==-1||(i=this.fields)!=null&&i.some(r=>r.type==="geometry")||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach(i=>{var a;const r=(a=i.prototype)==null?void 0:a.attributes;r&&t&&delete r[t]})}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new m("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new m("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach(t=>{t.layer=this,t.sourceLayer=this}),this.addHandles([e.on("after-add",t=>{t.item.layer=this,t.item.sourceLayer=this}),e.on("after-remove",t=>{t.item.layer=null,t.item.sourceLayer=null})],"fl-source")}_resetMemorySource(e){e.forEach(t=>{t.layer=null,t.sourceLayer=null}),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};s([y("service","capabilities")],o.prototype,"readCapabilities",null),s([n({json:{origins:{"web-scene":{write:!1}},write:!0}})],o.prototype,"charts",void 0),s([n({readOnly:!0})],o.prototype,"createQueryVersion",null),s([n({json:{read:{source:"layerDefinition.copyrightText"}}})],o.prototype,"copyright",void 0),s([n({json:{read:{source:"layerDefinition.displayField"}}})],o.prototype,"displayField",void 0),s([n({types:Ue,readOnly:!0})],o.prototype,"defaultSymbol",void 0),s([n({type:Be})],o.prototype,"dynamicDataSource",void 0),s([n({type:Boolean})],o.prototype,"editingEnabled",null),s([y(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],o.prototype,"readEditingEnabled",null),s([y("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],o.prototype,"readEditingEnabledFromWebMap",null),s([$(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],o.prototype,"writeEditingEnabled",null),s([$("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],o.prototype,"writeEditingEnabledToWebMap",null),s([n({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),s([n({...j.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:C}}}}})],o.prototype,"fields",void 0),s([n(j.fieldsIndex)],o.prototype,"fieldsIndex",void 0),s([n({type:yt,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"formTemplate",void 0),s([n({json:{read:{source:"layerDefinition.extent"}}})],o.prototype,"fullExtent",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:C,writer(e,t,i){const r=e?N.toJSON(e):null;r&&I(i,r,t)}}}},read:{source:"layerDefinition.geometryType",reader:N.read}}})],o.prototype,"geometryType",void 0),s([n({json:{read:{source:"layerDefinition.hasM"}}})],o.prototype,"hasM",void 0),s([n({json:{read:{source:"layerDefinition.hasZ"}}})],o.prototype,"hasZ",void 0),s([n(Ke)],o.prototype,"id",void 0),s([n({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],o.prototype,"infoFor3D",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],o.prototype,"isTable",void 0),s([y("service","isTable",["type","geometryType"]),y("isTable",["layerDefinition.type","layerDefinition.geometryType"])],o.prototype,"readIsTable",null),s([$("web-map","isTable")],o.prototype,"writeIsTable",null),s([n(Xe)],o.prototype,"labelsVisible",void 0),s([n({type:[Ye],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:O,write:!1},"web-scene":{name:"layerDefinition.drawingInfo.labelingInfo",read:O,write:{enabled:!0,layerContainerTypes:J}}},name:"layerDefinition.drawingInfo.labelingInfo",read:O,write:!0}})],o.prototype,"labelingInfo",void 0),s([n((()=>{const e=D(et);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(t,i,r){I(r,tt(t),i)}}},e})())],o.prototype,"opacity",void 0),s([n(it)],o.prototype,"legendEnabled",void 0),s([n({type:["show","hide"],json:(()=>{const e=D(rt.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],o.prototype,"listMode",void 0),s([y("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],o.prototype,"readGlobalIdField",null),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:C}}}}})],o.prototype,"objectIdField",void 0),s([y("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],o.prototype,"readObjectIdField",null),s([n({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],o.prototype,"operationalLayerType",void 0),s([n(j.outFields)],o.prototype,"outFields",void 0),s([n({readOnly:!0})],o.prototype,"parsedUrl",null),s([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([n(st)],o.prototype,"popupEnabled",void 0),s([n({type:at,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),s([n({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),s([n({types:ot,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:nt,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:J,overridePolicy:(e,t,i)=>({ignoreOrigin:i==null?void 0:i.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,i)=>({ignoreOrigin:i==null?void 0:i.writeLayerSchema})}}})],o.prototype,"renderer",null),s([y("service","renderer",["drawingInfo.renderer","defaultSymbol"]),y("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],o.prototype,"readRenderer",null),s([n()],o.prototype,"resourceInfo",void 0),s([n((()=>{const e=D(lt);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],o.prototype,"screenSizePerspectiveEnabled",void 0),s([n({clonable:!1})],o.prototype,"source",null),s([He("source")],o.prototype,"castSource",null),s([y("portal-item","source",["featureSet"]),y("web-map","source",["featureSet"])],o.prototype,"readSource",null),s([n({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],o.prototype,"spatialReference",void 0),s([n({type:Number})],o.prototype,"subtypeCode",void 0),s([n({type:[Q]})],o.prototype,"templates",void 0),s([y("templates",["editFieldsInfo","creatorField","editorField","templates"])],o.prototype,"readTemplates",null),s([n({type:ut})],o.prototype,"timeInfo",void 0),s([n()],o.prototype,"title",void 0),s([y("service","title",["name"]),y("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],o.prototype,"readTitle",null),s([y("web-map","title",["layerDefinition.name","title"])],o.prototype,"readTitleFromWebMap",null),s([n({type:String})],o.prototype,"sublayerTitleMode",void 0),s([n({json:{read:!1}})],o.prototype,"type",void 0),s([n({type:String})],o.prototype,"typeIdField",void 0),s([y("service","typeIdField"),y("typeIdField",["layerDefinition.typeIdField"])],o.prototype,"readTypeIdField",null),s([n({type:[W]})],o.prototype,"types",void 0),s([y("service","types",["types"]),y("types",["layerDefinition.types"])],o.prototype,"readTypes",null),s([n({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],o.prototype,"visible",void 0),s([y("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],o.prototype,"readVisible",null),o=s([E("esri.layers.FeatureLayer")],o);const kt=o;export{kt as default};
