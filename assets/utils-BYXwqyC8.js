import{bT as G,bU as V,R as _,bV as j,bW as z,bX as v,bY as O,bZ as R,N as U,b_ as Y,b$ as Z}from"./index-Bk13oInq.js";import{Z as A}from"./utils-cWutExFP.js";import{c as E,B as D}from"./utils-BXhZTjHH.js";let c=null;const L=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function P(t,e,o){return t.x<0?t.x+=e:t.x>o&&(t.x-=e),t}function k(t,e,o,s){const a=G(o)?V(o):null,u=a?Math.round((a.valid[1]-a.valid[0])/e.scale[0]):null;return t.map(i=>{const r=new _(i.geometry);return j(e,r,r),i.geometry=a?P(r,u??0,s[0]):r,i})}function q(t,e=18,o,s,a){const u=new Float64Array(s*a);e=Math.round(Y(e));let i=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const N=Z(o);for(const{geometry:b,attributes:g}of t){const{x:$,y:m}=b,x=Math.max(0,$-e),M=Math.max(0,m-e),F=Math.min(a,m+e),I=Math.min(s,$+e),h=+N(g);for(let f=M;f<F;f++)for(let d=x;d<I;d++){const y=f*s+d,w=z(d-$,f-m,e)*h,l=u[y]+=w;i=Math.min(i,l),r=Math.max(r,l)}}return{min:i,max:r}}function W(t){const e=L.exec(t);if(!e)return null;const{hh:o,mm:s,ss:a,ms:u}=e.groups;return Number(o)*v.hours+Number(s)*v.minutes+Number(a)*v.seconds+Number(u||0)}async function H(t,e,o=!0){if(!e)return[];const{field:s,field2:a,field3:u,fieldDelimiter:i,fieldInfos:r,timeZone:N}=t,b=s&&(r==null?void 0:r.find(l=>l.name.toLowerCase()===s.toLowerCase())),g=!!b&&O(b),$=!!b&&A(b),m=t.valueExpression,x=t.normalizationType,M=t.normalizationField,F=t.normalizationTotal,I=[],h=t.viewInfoParams;let f=null,d=null;if(m){if(!c){const{arcadeUtils:l}=await R();c=l}c.hasGeometryOperations(m)&&await c.enableGeometryOperations(),f=c.createFunction(m),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new U(h.spatialReference)}):null}const y=t.fieldInfos,w=!(e[0]&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic")&&y?{fields:y}:null;return e.forEach(l=>{const p=l.attributes;let n;if(m){const T=w?{...l,layer:w}:l,C=c.createExecContext(T,d,N);n=c.executeFunction(f,C)}else p&&(n=p[s],a?(n=`${E(n)}${i}${E(p[a])}`,u&&(n=`${n}${i}${E(p[u])}`)):typeof n=="string"&&o&&($?n=n?new Date(n).getTime():null:g&&(n=n?W(n):null)));if(x&&typeof n=="number"&&isFinite(n)){const T=p&&parseFloat(p[M]);n=D(n,x,T,F)}I.push(n)}),I}export{H as b,k as j,W as w,q as x};
