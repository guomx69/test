import{cS as p,A as s,ag as i}from"./index-BWzlmsaF.js";import{l as c}from"./MeshVertexAttributes-l7DcOFzX.js";import{M as n}from"./vertexSpaceConversion-4Q5H6bqZ.js";import"./mat3-BFiNYDsN.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-BcL1qi19.js";import"./computeTranslationToOriginAndRotation-BIzPVVlt.js";import"./meshVertexSpaceUtils-CosnMGt3.js";import"./MeshLocalVertexSpace-C8Clpab0.js";import"./vec3-C9p07ylH.js";import"./projection-DZqdeuz-.js";import"./DoubleArray-BVixKWUA.js";import"./BufferView-KiJKjvoj.js";import"./vec2-CgyBqi1o.js";import"./vec4-CjBHDc5r.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
