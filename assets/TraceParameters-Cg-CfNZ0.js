import{a4 as c,e as t,y as r,a as l,a1 as m,B as d,k as w,bZ as g}from"./index-DeC8R2EY.js";import{s as f,o as p}from"./WebMap-F2eB87jD.js";import"./ColorBackground-CCXAQYWM.js";import"./Cyclical-38T1ej_i.js";import"./Basemap-CLA9H8hr.js";import"./writeUtils-CAU0mSSk.js";import"./catalogUtils-CvPMm0ln.js";import"./basemapUtils-HzHsFYAS.js";import"./TablesMixin-C8OXRIvw.js";import"./FeatureLayer-7KR6wWwz.js";import"./FeatureLayerBase-EBb2I_nT.js";import"./HeightModelInfo-Dglyqlez.js";import"./workers-BguUern_.js";import"./editsZScale-DTdLYNgF.js";import"./EditBusLayer-8381OIDc.js";import"./uuid-fwrPAdZb.js";import"./FeatureEffectLayer-CE2Q1cAv.js";import"./FeatureEffect-D1PpR74G.js";import"./FeatureReductionLayer-vAjgliOm.js";import"./FeatureReductionSelection-BCh-NaTk.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-w-3MZAaj.js";import"./OrderByInfo-Br9M7bNj.js";import"./fieldProperties-DODbFAxB.js";import"./styleUtils-DAM41-wy.js";import"./TopFeaturesQuery-CSoj0bgW.js";import"./interfaces-CL2NbQte.js";import"./jsonContext-DYXQjUFR.js";import"./project-zDkHlQI1.js";const a=new c({startingPoint:"starting-point",barrier:"barrier"});let i=class extends m{constructor(o){super(o),this.globalId=null,this.isFilterBarrier=!1,this.percentAlong=null,this.terminalId=null,this.type=null}};t([r({type:String,json:{write:!0}})],i.prototype,"globalId",void 0),t([r({type:Boolean,json:{write:!0}})],i.prototype,"isFilterBarrier",void 0),t([r({type:Number,json:{write:!0}})],i.prototype,"percentAlong",void 0),t([r({type:Number,json:{write:!0}})],i.prototype,"terminalId",void 0),t([r({type:a.apiValues,json:{type:a.jsonValues,read:{reader:a.read,source:"traceLocationType"},write:{writer:a.write,target:"traceLocationType"}}})],i.prototype,"type",void 0),i=t([l("esri.rest.networks.support.TraceLocation")],i);const j=i;var s;let e=s=class extends m{static from(o){return g(s,o)}constructor(o){super(o),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}writeOutSR(o,n,u){if(o!=null){const{wkid:y}=o;n[u]=JSON.stringify({wkid:y})}}};t([r({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],e.prototype,"namedTraceConfigurationGlobalId",void 0),t([r({type:String,json:{write:!0}})],e.prototype,"gdbVersion",void 0),t([r({type:[j],json:{write:!0}})],e.prototype,"traceLocations",void 0),t([r({type:Date,json:{type:Number,write:{writer:(o,n)=>{n.moment=o?o.getTime():null}}}})],e.prototype,"moment",void 0),t([r({type:d,json:{write:{allowNull:!0,target:"outSR"}}})],e.prototype,"outSpatialReference",void 0),t([w("outSpatialReference")],e.prototype,"writeOutSR",null),t([r({type:f,json:{write:!0}})],e.prototype,"traceConfiguration",void 0),t([r({type:[Object],json:{write:!0}})],e.prototype,"resultTypes",void 0),t([r({type:p.apiValues,json:{type:p.jsonValues,read:p.read,write:p.write}})],e.prototype,"traceType",void 0),e=s=t([l("esri.rest.networks.support.TraceParameters")],e);const Q=e;export{Q as default};
