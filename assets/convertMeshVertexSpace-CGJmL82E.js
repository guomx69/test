import{cS as p,A as s,ag as i}from"./index-3fJYBySH.js";import{l as c}from"./MeshVertexAttributes-fWE3WW1P.js";import{M as n}from"./vertexSpaceConversion-BGtDUPmk.js";import"./mat3-Cdiv_za_.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-Ddi-HrOM.js";import"./computeTranslationToOriginAndRotation-B6j2EfOe.js";import"./meshVertexSpaceUtils-DpyOhcNg.js";import"./MeshLocalVertexSpace-yaRs_QQj.js";import"./vec3-_hzVfcty.js";import"./projection-CShfmwHn.js";import"./DoubleArray-CEIiiWLt.js";import"./BufferView-BYO3B1dl.js";import"./vec2-B_clJs28.js";import"./vec4-BCJJ5rn9.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
